import numpy as np
import matplotlib.pyplot as plt
from tensorflow.keras.datasets import cifar10
from tensorflow.keras.utils import to_categorical
from sklearn.model_selection import train_test_split

# Load the CIFAR-10 dataset
(X_train, y_train), (X_test, y_test) = cifar10.load_data()

# CIFAR-10 classes
classes = ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']

# Filter out non-animal classes (0, 1, 8, 9)
animal_classes = [2, 3, 4, 5, 6, 7]
X_train = X_train[np.isin(y_train, animal_classes).flatten()]
y_train = y_train[np.isin(y_train, animal_classes).flatten()]
X_test = X_test[np.isin(y_test, animal_classes).flatten()]
y_test = y_test[np.isin(y_test, animal_classes).flatten()]

# Map the labels to new indices (0-5)
y_train = np.array([animal_classes.index(y) for y in y_train.flatten()])
y_test = np.array([animal_classes.index(y) for y in y_test.flatten()])

# Normalize the images to the range of 0 to 1
X_train = X_train.astype('float32') / 255.0
X_test = X_test.astype('float32') / 255.0

# One-hot encode the labels
y_train = to_categorical(y_train, len(animal_classes))
y_test = to_categorical(y_test, len(animal_classes))

# Split a validation set from the training data
X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.2, random_state=42)
